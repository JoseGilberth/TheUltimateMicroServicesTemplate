host: 
  local: http://localhost:8600
  front-end: http://localhost:4200
  security: http://localhost:8602
  zipkin: http://127.0.0.1:9411

spring: 
  profiles:
    active: '@activatedProperties@'
  banner:
    location: classpath:/banners/banner-dev.txt
  boot: 
    admin:
      context-path: /admin  #A different context path for Spring boot admin server has been provided avoiding conflict with eureka       instance-proxy:
        ignored-headers: Authorization, Cookie, Set-Cookie
      monitor:
        status-interval: 600000 # milisegundos : 10 minutos Time interval to check the status of instances.
        status-lifetime: 3600000 # milisegundos : 60 minutos Lifetime of status. The status won’t be updated as long the last status isn’t expired
        info-interval: 600000 # milisegundos : 10 minutos  Time interval to check the info of instances. 
        info-lifetime: 600000 # milisegundos : 10 minutos  Lifetime of info. The info won’t be updated as long the last info isn’t expired.
  autoconfigure:
    exclude:
    - org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
    - org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration
  # ZIPKIN
  zipkin:
    enabled: true
    discovery-client-enabled: true
  # SLEUTH
  sleuth: 
    enabled: true
    feign:
      enabled: true
    http:
      enabled: true
    zuul:
      enabled: true   
    sampler:
      probability: 1

# EUREKA
eureka:
  instance:
    prefer-ip-address: false 
    hostname: localhost
    #Indicates the time in seconds that the eureka server waits since it received the last heartbeat before it can remove this instance from its 
    #view and there by disallowing traffic to this instance.
    #Setting this value too long could mean that the traffic could be routed to the instance even though the instance is not alive. 
    #Setting this value too small could mean, the instance may be taken out of traffic because of temporary network glitches.
    #This value to be set to atleast higher than the value specified in leaseRenewalIntervalInSeconds.
    lease-expiration-duration-in-seconds:  1800 # 30 minutos
    #Indicates how often (in seconds) the eureka client needs to send heartbeats to eureka server to indicate that it is still alive. 
    #If the heartbeats are not received for the period specified in leaseExpirationDurationInSeconds, 
    # eureka server will remove the instance from its view, there by disallowing traffic to this instance.
    #Note that the instance could still not take traffic if it implements HealthCheckCallback and then decides to make itself unavailable
    lease-renewal-interval-in-seconds:  1200 # 20 minutos
  client:
    fetch-registry: false
    register-with-eureka: false
    service-url:
      defaultZone: ${host.eureka}/discovery-server/eureka/
    eureka-server-read-timeout-seconds: 60 # 1 minuto
    eureka-server-connect-timeout-seconds: 60 # 1 minuto
    registry-fetch-interval-seconds:  1800 #  30 minutos Indicates how often(in seconds) to fetch the registry information from the eureka server.


# MANAGEMENT
management:
  endpoints:
    web:
      exposure:
        include: "*"  
  
# SECURITY
security:
  jwt:
    resource-id: template_resource
  oauth2:
    resource:
      user-info-uri: ${host.security}/micro-auth/usuario
      preferTokenInfo: true
    unprotected-paths: /heartbeat, /eureka , /eureka/**
    boot-admin-paths: /admin, /admin/login , /admin/assets/**, /admin/instances
    swagger-paths: /v2/api-docs, /configuration/ui, /swagger-resources/**, /configuration/security, /swagger-ui.html, /webjars/**
    ignored-paths: /heartbeat

# WEBSOCKET    
websocket:
  stomp:
    endpoints: /websocket
  topics:
    admin: /notify/admin
    log: /notify/logger

# HYSTRIX
hystrix:  
  metrics:
    polling-interval-ms: 1800 #  30 minutos Interval between subsequent polling of metrics. Defaults to 2000 ms.
 
 
# LOGGER
logging:
  level:
    org:
      springframework: 
        web: INFO
        security: INFO
      hibernate: 
        type:
          descriptor:
            sql:
              BasicBinder: DEBUG # IMPRIME LOS DATOS ENTRANTES A HIBERNATE 
      
      
