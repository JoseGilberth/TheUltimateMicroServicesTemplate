spring:
  profiles: ## SIRVEN PARA SEPARAR LAS DIREFENTES CONFIGURACIONES DEL SISTEMA
    active: '@activatedProperties@' ## NOMBRE DEL PERFIL
  banner:
    location: classpath:/banners/banner-dev.txt
  main:
    allow-bean-definition-overriding: true ## SOBRE ESCRIBE BEAN (OBJETOS) REPETIDOS ENTRE PROYECTO
  jackson: # JACKSON - ES USADA POR SPRING WEB, ES UNA LIBRERIA DE TRANSFORMACIÃ“N DE OBJETOS
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: America/Mexico_City
    joda-date-time-format: yyyy-MM-dd HH:MM:SS
    locale: es_MX
  # BOOT ADMIN
  boot:
    admin:
      client:
        enabled: true
        url: http://localhost:8600/discovery-server/admin
        instance:
          service-base-url: http://localhost:8609
        period: 3600000 # milisegundos : 30 minutos  Interval for repeating the registration
      
# EUREKA
eureka:
  instance:
    prefer-ip-address: true 
    hostname: localhost
    #Indicates the time in seconds that the eureka server waits since it received the last heartbeat before it can remove this instance from its 
    #view and there by disallowing traffic to this instance.
    #Setting this value too long could mean that the traffic could be routed to the instance even though the instance is not alive. 
    #Setting this value too small could mean, the instance may be taken out of traffic because of temporary network glitches.
    #This value to be set to atleast higher than the value specified in leaseRenewalIntervalInSeconds.
    lease-expiration-duration-in-seconds:  1800 # 30 minutos
    #Indicates how often (in seconds) the eureka client needs to send heartbeats to eureka server to indicate that it is still alive. 
    #If the heartbeats are not received for the period specified in leaseExpirationDurationInSeconds, 
    # eureka server will remove the instance from its view, there by disallowing traffic to this instance.
    #Note that the instance could still not take traffic if it implements HealthCheckCallback and then decides to make itself unavailable
    lease-renewal-interval-in-seconds:  1200 # 20 minutos
  client:
    #fetchRegistry: true
    register-with-eureka: true
    service-url:
      defaultZone: http://localhost:8600/discovery-server/eureka
    eureka-server-read-timeout-seconds: 60 # 1 minuto
    eureka-server-connect-timeout-seconds: 60 # 1 minuto
    registry-fetch-interval-seconds:  1800 #  30 minutos Indicates how often(in seconds) to fetch the registry information from the eureka server.


management:
  metrics:
    web:
      server:
        auto-time-requests: false
        
zipkin: 
  ui:
    basepath: /micro-zipkin/zipkin
    
# LOGGER
logging:
  level:
    org:
      springframework:
        web: DEBUG
        security: TRACE
      hibernate:
        type:
          descriptor:
            sql:
              BasicBinder: TRACE # IMPRIME LOS DATOS ENTRANTES A HIBERNATE


