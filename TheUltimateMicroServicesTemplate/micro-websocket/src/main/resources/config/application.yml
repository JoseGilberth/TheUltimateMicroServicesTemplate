spring:
  profiles: ## SIRVEN PARA SEPARAR LAS DIREFENTES CONFIGURACIONES DEL SISTEMA
    active: '@activatedProperties@' ## NOMBRE DEL PERFIL
  banner:
    location: classpath:/banners/banner-dev.txt
  main:
    allow-bean-definition-overriding: true ## SOBRE ESCRIBE BEAN (OBJETOS) REPETIDOS ENTRE PROYECTO
  jackson: # JACKSON - ES USADA POR SPRING WEB, ES UNA LIBRERIA DE TRANSFORMACIÃ“N DE OBJETOS
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: America/Mexico_City
    joda-date-time-format: yyyy-MM-dd HH:MM:SS
    locale: es_MX
  datasource: # CONFIGURACIONES DE CONEXION
    url: jdbc:mysql://localhost/stegeriluminacion?zeroDateTimeBehavior=CONVERT_TO_NULL&serverTimezone=America/Mexico_City
    username: root
    password: G1lb3rt0.
    driver-class-name: com.mysql.jdbc.Driver
    continue-on-error: true 
    hikari:
      connection-timeout: 20000 #(20 segundos) maximum number of milliseconds that a client will wait for a connection
      minimum-idle: 10 #minimum number of idle connections maintained by HikariCP in a connection pool
      maximum-pool-size: 10 #maximum pool size
      idle-timeout: 10000 #(10 segundos)maximum idle time for connection
      max-lifetime: 1000 #(1 segundo) maximum lifetime in milliseconds of a connection in the pool after it is closed.
      auto-commit: true #default auto-commit behavior.
  jpa:  ## DIRECTIVA Y CONFIGURACIONES DEL FRAMEWORK JPA
    show-sql : true # Muestra o pinta lo que hace pda los queryes
    database: mysql # lenguaje de los querys es mysql
    hibernate:  
      ddl-auto: update # quieres actualizar la tabla cada vezx que se conecte
    properties:
      hibernate:
        format_sql: true # le da formato a los query
        dialect: org.hibernate.dialect.MySQL57Dialect
    database-platform: org.hibernate.dialect.MySQL57Dialect 
  # ZIPKIN
  zipkin:
    base-url: http://localhost:8609/micro-zipkin/
    enabled: false
    discovery-client-enabled: false
  # SLEUTH
  sleuth: 
    feign:
      enabled: true
    http:
      enabled: true
    zuul:
      enabled: true   
    enabled: false
    sampler:
      probability: 1
  # BOOT ADMIN
  boot:
    admin:
      client:
        enabled: true
        url: http://localhost:8600/discovery-server/admin
        instance:
          service-base-url: http://localhost:8606
        period: 3600000 # milisegundos : 30 minutos  Interval for repeating the registration 
      
# EUREKA
eureka:
  instance:
    prefer-ip-address: true 
    hostname: localhost
    #Indicates the time in seconds that the eureka server waits since it received the last heartbeat before it can remove this instance from its 
    #view and there by disallowing traffic to this instance.
    #Setting this value too long could mean that the traffic could be routed to the instance even though the instance is not alive. 
    #Setting this value too small could mean, the instance may be taken out of traffic because of temporary network glitches.
    #This value to be set to atleast higher than the value specified in leaseRenewalIntervalInSeconds.
    lease-expiration-duration-in-seconds:  1800 # 30 minutos
    #Indicates how often (in seconds) the eureka client needs to send heartbeats to eureka server to indicate that it is still alive. 
    #If the heartbeats are not received for the period specified in leaseExpirationDurationInSeconds, 
    # eureka server will remove the instance from its view, there by disallowing traffic to this instance.
    #Note that the instance could still not take traffic if it implements HealthCheckCallback and then decides to make itself unavailable
    lease-renewal-interval-in-seconds:  1200 # 20 minutos
  client:
    #fetchRegistry: true
    register-with-eureka: true
    service-url:
      defaultZone: http://localhost:8600/discovery-server/eureka
    eureka-server-read-timeout-seconds: 60 # 1 minuto
    eureka-server-connect-timeout-seconds: 60 # 1 minuto
    registry-fetch-interval-seconds:  1800 #  30 minutos Indicates how often(in seconds) to fetch the registry information from the eureka server.

      

# SECURITY
security:
  unprotected-paths: /**
  jwt:
    resource-id: stegerilumination_resource
  oauth2:
    resource:
      user-info-uri:  http://localhost:8602/micro-auth/usuario 
      preferTokenInfo: true
 

management:
  metrics:
    web:
      server:
        auto-time-requests: false

zipkin: 
  ui:
    basepath: /micro-zipkin/zipkin


# LOGGER
logging:
  level:
    org:
      springframework:
        web: DEBUG
        security: TRACE
      hibernate:
        type:
          descriptor:
            sql:
              BasicBinder: TRACE # IMPRIME LOS DATOS ENTRANTES A HIBERNATE

