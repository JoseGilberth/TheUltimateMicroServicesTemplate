<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>mx.smartdevelop</groupId>
		<artifactId>Microservice-Template</artifactId>
		<version>1.0.0</version>
	</parent>

	<!-- INFO -->
	<artifactId>micro-auth</artifactId>
	<name>Micro-Auth</name>
	<description>Micro servicio para autenticar a todos los usuarios</description>
	<packaging>war</packaging>

	<!-- PROPERTIES -->
	<properties>
		<start-class>micro.auth.MicroAuthApplication</start-class>
		<java.version>1.8</java.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<!-- BUILD -->
	<build>
		<finalName>auth</finalName>
		<resources>
			<!-- ESTA CONFIGURACION ES IDEAL PARA JENKINS , YA QUE ASI ACEPTA PARAMETRIZACION 
				POR PERFIL Y ADEMAS SUBE ARCHIVOS JKS PARA LA GENERACIOND DE UN TOKEN MAS 
				FUERTE -->
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<excludes>
					<exclude>**/*.jks</exclude>
				</excludes>
			</resource> 
			<resource>
				<directory>src/main/resources</directory>
				<filtering>false</filtering>
				<includes>
					<include>**/*.jks</include>
					<include>**/*.txt</include>
					<include>**/*.yml</include>
					<include>**/*.sql</include>
					<include>**/*.properties</include>
					<include>**/*.png</include>
					<include>**/*.html</include>
					<include>**/*.traineddata</include>
				</includes>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<addResources>true</addResources>
				</configuration>
			</plugin>
			<!-- COPIA ARCHIVOS DE CONFIGURACION DESDE EL PROYECTO DE UTILS A ESTE 
				PROYECTO 
			 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-minimal-resources</id>
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>src/main/resources</outputDirectory>
							<resources>
								<resource>
									<directory>${project.parent.basedir}/utils/src/main/resources/micro_auth</directory>
									<filtering>false</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-language</id>
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>src/main/resources/language</outputDirectory>
							<resources>
								<resource>
									<directory>${project.parent.basedir}/utils/src/main/resources/language</directory>
									<filtering>false</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<!-- PERFILES -->
	<profiles>
		<profile>
			<id>dev</id>
			<properties>
				<activatedProperties>dev</activatedProperties>
			</properties>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
		</profile>
		<profile>
			<id>prod</id>
			<properties>
				<activatedProperties>prod</activatedProperties>
			</properties>
		</profile>
	</profiles>



	<dependencies>
		<!--========================================= SPRING ============================================= -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
		</dependency>
		<dependency>
			<groupId>de.codecentric</groupId>
			<artifactId>spring-boot-admin-starter-client</artifactId>
		</dependency> 
		<!-- ________ SECURITY ________ -->
		<dependency>
			<groupId>org.springframework.security.oauth</groupId>
			<artifactId>spring-security-oauth2</artifactId>
			<version>2.3.5.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security.oauth.boot</groupId>
			<artifactId>spring-security-oauth2-autoconfigure</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.cloudfoundry</groupId>
			<artifactId>cloudfoundry-client-lib</artifactId>
			<version>1.1.1</version>
		</dependency>
		<!-- ________ JPA ________ -->
		<!--Added HikariCP -->
		<dependency>
			<groupId>com.zaxxer</groupId>
			<artifactId>HikariCP</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
			<exclusions>
				<exclusion>
					<artifactId>tomcat-jdbc</artifactId>
					<groupId>org.apache.tomcat</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- ________ DEPENDENCIA DE OTROS MODULOS ________ -->
		<dependency>
			<groupId>mx.smartdevelop</groupId>
			<artifactId>dao</artifactId>
			<version>1.0.0</version>
		</dependency>
		<dependency>
			<groupId>mx.smartdevelop</groupId>
			<artifactId>excepciones</artifactId>
			<version>1.0.0</version>
		</dependency>
		<dependency>
			<groupId>mx.smartdevelop</groupId>
			<artifactId>interfaces</artifactId>
			<version>1.0.0</version>
		</dependency>
		<dependency>
			<groupId>mx.smartdevelop</groupId>
			<artifactId>utils</artifactId>
			<version>1.0.0</version>
		</dependency>
	</dependencies>

</project>

